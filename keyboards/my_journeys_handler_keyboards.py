from aiogram.filters.callback_data import CallbackData
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from lexicon import my_journeys_handler_lexicon

lexicon = my_journeys_handler_lexicon


class Pagination(CallbackData, prefix="pag"):
    action: str


def get_remove_kb(participants: list[str], participants_ids: list[str]):
    kb_remove = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[], one_time_keyboard=True,
                                    input_field_placeholder="–û—Ç–ø—Ä–∞–≤—å –¥—Ä—É–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    for index in range(len(participants)):
        bt_remove = KeyboardButton(text=f"{participants[index]} (ID: {participants_ids[index]})")
        kb_remove.keyboard.append([bt_remove])
    return kb_remove


bt_left = InlineKeyboardButton(text=lexicon.Emojis.left, callback_data=Pagination(action="left").pack())
bt_right = InlineKeyboardButton(text=lexicon.Emojis.right, callback_data=Pagination(action="right").pack())
bt_cancel = InlineKeyboardButton(text="–í—ã–π—Ç–∏", callback_data=Pagination(action="exit").pack())
bt_add_friend = InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞ üë•", callback_data=Pagination(action="add_friend").pack())
bt_remove_friend = InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞ üë§", callback_data=Pagination(action="remove_friend").pack())
bt_get_route_image = InlineKeyboardButton(text="–ü—É—Ç—å üó∫",
                                          callback_data=Pagination(action="route_image").pack())
bt_add_note = InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É ‚úçÔ∏è",
                                   callback_data=Pagination(action="add_note").pack())
bt_see_note = InlineKeyboardButton(text="–ó–∞–º–µ—Ç–∫–∏ üóí",
                                   callback_data=Pagination(action="see_note").pack())
bt_delete = InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å ‚ùå",
                                 callback_data=Pagination(action="delete").pack())
bt_places = InlineKeyboardButton(text="–û–∫—Ä—É–≥–∞ üèò", callback_data=Pagination(action="places").pack())
bt_update = InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å üîÑ", callback_data=Pagination(action="update").pack())
bt_weather = InlineKeyboardButton(text="–ü–æ–≥–æ–¥–∞ " + lexicon.Emojis.weather,
                                  callback_data=Pagination(action="weather").pack())
kb_switch = InlineKeyboardMarkup(
    inline_keyboard=[[bt_left, bt_right], [bt_add_friend, bt_remove_friend], [bt_add_note, bt_see_note],
                     [bt_get_route_image, bt_weather],
                     [bt_places],
                     [bt_delete, bt_update],
                     [bt_cancel]])

button_mobile = KeyboardButton(text="–¢–µ–ª–µ—Ñ–æ–Ω")
button_pc = KeyboardButton(text="–ö–æ–º–ø—å—é—Ç–µ—Ä")
button_another = KeyboardButton(text="–ò–Ω–æ–µ")
kb_resolution = ReplyKeyboardMarkup(resize_keyboard=True,
                                    keyboard=[[button_mobile, button_pc, button_another]], one_time_keyboard=True,
                                    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.")

bt_left_note = InlineKeyboardButton(text=lexicon.Emojis.left, callback_data=Pagination(action="lleft").pack())
bt_right_note = InlineKeyboardButton(text=lexicon.Emojis.right, callback_data=Pagination(action="rright").pack())
bt_cancel_note = InlineKeyboardButton(text="–í—ã–π—Ç–∏", callback_data=Pagination(action="eexit").pack())
bt_remove_note = InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É üßΩ",
                                      callback_data=Pagination(action="remove_note").pack())

kb_note_slider = InlineKeyboardMarkup(
    inline_keyboard=[[bt_left_note, bt_right_note], [bt_remove_note], [bt_cancel_note]])

bt_left_place = InlineKeyboardButton(text=lexicon.Emojis.left, callback_data=Pagination(action="llleft").pack())
bt_right_place = InlineKeyboardButton(text=lexicon.Emojis.right, callback_data=Pagination(action="rrright").pack())
bt_cancel_place = InlineKeyboardButton(text="–í—ã–π—Ç–∏", callback_data=Pagination(action="eeexit").pack())

kb_place_slider = InlineKeyboardMarkup(inline_keyboard=[[bt_left_place, bt_right_place], [bt_cancel_place]])

bt_create_journey = KeyboardButton(text="/create_journey")
bt_my_journeys = KeyboardButton(text="/my_journeys")
bt_help = KeyboardButton(text="/help")
bt_profile = KeyboardButton(text="/profile")

kb_main_menu = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[[bt_help], [bt_create_journey, bt_my_journeys], [bt_profile]],
                                   one_time_keyboard=True,
                                   input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ."
                                   )

bt_update_name = KeyboardButton(text="–ù–∞–∑–≤–∞–Ω–∏–µ üî§")
bt_update_transport_type = KeyboardButton(text="–¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ üöò")
bt_update_datetime_start = KeyboardButton(text="–î–∞—Ç—É –Ω–∞—á–∞–ª–∞ üìÖ")
bt_add_node = KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø—É–Ω–∫—Ç üåá")

kb_update = ReplyKeyboardMarkup(resize_keyboard=True,
                                keyboard=[[bt_update_name, bt_update_transport_type], [bt_update_datetime_start],
                                          [bt_add_node]],
                                one_time_keyboard=True,
                                input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ."
                                )
